package BuildingControl
public
  with Base_Types, Data_Model;

system BuildingControlDemo
	--features
	  --setPoint :  in event data port SetPoint;
end BuildingControlDemo;

system implementation BuildingControlDemo.i
	subcomponents
	  tempSensor : device TempSensor.i;
	  tcp : process TempControlProcess.i;
	  fan : device Fan.i;
	connections
	  --sp : port setPoint -> tcp.setPoint;
	  ct : port tempSensor.currentTemp -> tcp.currentTemp;
	  fc : port tcp.fanCmd -> fan.fanCmd;
	  --fa : port fan.fanAck -> tcp.fanAck;
end BuildingControlDemo.i;
	
device TempSensor
	features
	  --currentTemp : out event data port Temperature;
	  currentTemp: out event data port Base_Types::Integer_16;
  properties
    Dispatch_Protocol => Periodic;
    Period => 1 sec;
end TempSensor;

device implementation TempSensor.i
end TempSensor.i;

device Fan
	features
	  --fanCmd : in event data port FanCmd;
	  fanCmd: in event data port Base_Types::Boolean;
	  
	  --fanAck : out event data port FanAck;
  properties
    Dispatch_Protocol => Sporadic;
    Period => 1 sec;
end Fan;

device implementation Fan.i
end Fan.i;

process TempControlProcess
	features
	  --currentTemp : in event data port Temperature;
	  currentTemp: in event data port Base_Types::Integer_16;

	  --fanCmd : out event data port FanCmd;
	  fanCmd: out event data port Base_Types::Boolean;

	  --fanAck : in event data port FanAck;
	  fanAck: in event data port Base_Types::Boolean;	

	  --setPoint :  in event data port SetPoint;
end TempControlProcess;

process implementation TempControlProcess.i
	subcomponents
	  tempControl : thread TempControl.i;
	connections
	  ct : port currentTemp -> tempControl.currentTemp;
	  fc : port tempControl.fanCmd -> fanCmd;
	  --fa : port fanAck -> tempControl.fanAck;
	  --sp : port setPoint -> tempControl.setPoint;
end TempControlProcess.i;

thread TempControl
	features
	  --currentTemp : in event data port Temperature;
	  currentTemp: in event data port Base_Types::Integer_16;
	  
	  --fanCmd : out event data port FanCmd;
	  fanCmd: out event data port Base_Types::Boolean;
	  
	  --fanAck : in event data port FanAck;	
	  --setPoint : in event data port SetPoint;
  properties
    Dispatch_Protocol => Sporadic;
    Period => 1 sec;	  
end TempControl;

thread implementation TempControl.i

end TempControl.i;


data Temperature
  properties
    Data_Model::Data_Representation => Struct;
    Data_Model::Element_Names =>
      ("degrees",
      "unit"
      );
    Data_Model::Base_Type =>
      ( classifier(Base_Types::Float),
        classifier(Unit)
      );
end Temperature;

data SetPoint
  properties
    Data_Model::Data_Representation => Struct;
    Data_Model::Element_Names =>
      ("low",
       "high"
      );
    Data_Model::Base_Type =>
      (
        classifier(Temperature),
        classifier(Temperature)
      );
end SetPoint;

data Unit
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("Fahrenheit", "Celsius", "Kelvin");
end Unit;

data FanAck
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("Ok", "Error");
end FanAck;

data FanCmd
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("On", "Off");
end FanCmd;

end BuildingControl;